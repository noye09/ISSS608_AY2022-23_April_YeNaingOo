[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nShow the code\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "Inclass_ex04.html",
    "href": "Inclass_ex04.html",
    "title": "Inclass Exercise 04",
    "section": "",
    "text": "Show the code\npacman::p_load(rstatix, gt, patchwork, tidyverse)\n\n\n\n\nShow the code\nexam_data <- read.csv(\"data/Hands-on_Ex04/Exam_data.csv\")\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote: some note here\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nqq <- ggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t <- exam_data %>%\n  shapiro_test(ENGLISH) %>%\n  gt()\n\ntmp <- tempfile(fileext = '.png')\ngtsave(sw_t,tmp)\ntable_png <- png::readPNG(tmp,native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 AY2022-23 April Term_Ye Naing Oo",
    "section": "",
    "text": "Welcome to my Quarto page!\nI’m currently developing this page as part of my postgraduate studies for a Master of IT in Business at the SMU School of Information Systems. The purpose of this site is to showcase my visual analytics works, so please feel free to explore and let me know if you have any feedback or questions. Thank you for visiting!\n\n\n\nIn God we trust, all others bring data."
  },
  {
    "objectID": "Take-home-Exercise_1.html",
    "href": "Take-home-Exercise_1.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "Instruction on Take Home Exercise 1"
  },
  {
    "objectID": "Take-home-Exercise_1.html#checking-missing-value",
    "href": "Take-home-Exercise_1.html#checking-missing-value",
    "title": "Take Home Exercise 1",
    "section": "Checking missing value",
    "text": "Checking missing value\n\n\nShow the code\napply(joined_data[c(\"participantId\", \"timestamp\",\"category\",\"amount\",\"householdSize\",\"haveKids\",\"age\",\"educationLevel\",\"interestGroup\",\"joviality\")], 2, function(x) sum(is.na(x)))\n\n\n participantId      timestamp       category         amount  householdSize \n             0              0              0              0              0 \n      haveKids            age educationLevel  interestGroup      joviality \n             0              0              0              0              0"
  },
  {
    "objectID": "Take-home-Exercise_1.html#checking-duplicate-rows",
    "href": "Take-home-Exercise_1.html#checking-duplicate-rows",
    "title": "Take Home Exercise 1",
    "section": "Checking duplicate rows",
    "text": "Checking duplicate rows\n\n\nShow the code\njoined_data %>% \n  distinct(participantId, timestamp, category, amount, householdSize, haveKids, age, educationLevel, interestGroup, joviality, .keep_all = TRUE) %>%\n  group_by(participantId, timestamp, category, amount, householdSize, haveKids, age, educationLevel, interestGroup, joviality) %>%\n  filter(n() > 1) %>%\n  ungroup() %>%\n  as_tibble()\n\n\n# A tibble: 0 × 10\n# … with 10 variables: participantId <dbl>, timestamp <dttm>, category <chr>,\n#   amount <dbl>, householdSize <dbl>, haveKids <lgl>, age <dbl>,\n#   educationLevel <chr>, interestGroup <chr>, joviality <dbl>"
  },
  {
    "objectID": "Inclass_ex05.html",
    "href": "Inclass_ex05.html",
    "title": "Inclass Exercise 05",
    "section": "",
    "text": "Show the code\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\nGAStech_nodes <- read_csv(\"data/Hands-on_Ex05/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/Hands-on_Ex05/GAStech_email_edge-v2.csv\")\n\n\n\n\nShow the code\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\nShow the code\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\nShow the code\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%        \n  filter(Weight > 1) %>%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…\n\n\n\n\nShow the code\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\n\n\nShow the code\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# … with 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# … with 51 more rows\n\n\n\n\nShow the code\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\nShow the code\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\nShow the code\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n\nShow the code\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\nShow the code\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n\nShow the code\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "MC1.html",
    "href": "MC1.html",
    "title": "MC1",
    "section": "",
    "text": "Show the code\npacman::p_load(jsonlite,tidygraph,ggraph, visNetwork, tidyverse)\n\n\n\n\nShow the code\nMC1 <- fromJSON(\"data/MC1/MC1.json\")\n\n\n\n\nShow the code\nMC1_nodes <- as_tibble(MC1$nodes) %>% \n  select(id, type, country)\n\nglimpse(MC1_nodes)\n\n\nRows: 3,428\nColumns: 3\n$ id      <chr> \"Spanish Shrimp  Carriers\", \"12744\", \"143129355\", \"7775\", \"101…\n$ type    <chr> \"company\", \"organization\", \"organization\", \"organization\", \"or…\n$ country <chr> \"Nalakond\", NA, NA, NA, NA, NA, NA, \"Rio Isla\", NA, NA, NA, NA…\n\n\nShow the code\nMC1_edges <- as_tibble(MC1$links) %>% \n  select(source, target, type, weight, key)\n\nglimpse(MC1_edges)\n\n\nRows: 11,069\nColumns: 5\n$ source <chr> \"Spanish Shrimp  Carriers\", \"Spanish Shrimp  Carriers\", \"Spanis…\n$ target <chr> \"12744\", \"21323516\", \"290834957\", \"3506021\", \"Conventionâ\", \"22…\n$ type   <chr> \"ownership\", \"partnership\", \"partnership\", \"ownership\", \"family…\n$ weight <dbl> 0.9001396, 0.8458973, 0.9648761, 0.9642126, 0.8234858, 0.893152…\n$ key    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …"
  },
  {
    "objectID": "Take-home-Exercise_1.html#data-preparation",
    "href": "Take-home-Exercise_1.html#data-preparation",
    "title": "Take Home Exercise 1",
    "section": "Data preparation",
    "text": "Data preparation\n\nload necessary libraries\n\npacman::p_load(ggrepel,ggthemes,hrbrthemes,rstatix,dplyr, gt,visNetwork, patchwork, tidyverse,lubridate,kableExtra,ggridges,plotly,gganimate,viridis,ggplot2movies,readxl, gifski, gapminder)\n\n\n\nRead the CSV files\nRead the CSV file “FinancialJournal.csv” and store the data in the variable “financial”. Suppress display of column types. Remove duplicate rows using unique() Apply abs() to amount column to remove negative sign for spending.\n\nfinancial<- read_csv(\"data/FinancialJournal.csv\",show_col_types = FALSE)\nfinancial <- unique(financial)\n#glimpse(financial,width=NULL)\nfinancial$amount <- abs(financial$amount )\n\nfinancial <- financial %>% \n  mutate(\n    year = year(timestamp),\n    month = month(timestamp),\n    weekdays = weekdays(timestamp),\n    day = day(timestamp)\n  )\n\nRead the CSV file “Participants.csv” and store the data in the variable “participants”. Suppress display of column types. Remove duplicate rows using unique()\n\nparticipants <- read_csv(\"data/Participants.csv\",show_col_types = FALSE)\nparticipants <- unique(participants)\n#glimpse(participants,width=NULL)\n\n\n\nPerform a left join on two tables\nPerform a left join between the “financial” and “participants” data frames, matching rows by participantId. Preview of the “joined_data” as follow.\n\njoined_data <- left_join(financial, participants, by = join_by(participantId   == participantId  ))\n#glimpse(joined_data,width=NULL)\n\n\n\nCheck for missing data\nApply the function to calculate the sum of missing values (NA) for each column specified in the joined_data data frame. Number of missing value = 0 in all 10 columns. No missing value found.\n\n\nShow the code\n# Check for missing values using is.na()\nmissing_data <- is.na(joined_data)\n\n# Check for missing values using is.na()\nmissing_data <- sapply(joined_data, function(x) sum(is.na(x)))\n\n# Print the number of missing values per column\nprint(missing_data)\n\n\n participantId      timestamp       category         amount           year \n             0              0              0              0              0 \n         month       weekdays            day  householdSize       haveKids \n             0              0              0              0              0 \n           age educationLevel  interestGroup      joviality \n             0              0              0              0 \n\n\n\n\nRemoving outliers\nRemoved Participants with with not enough data points in FinancialJournal. Filtered out these participantId from all the original tables. Plot a histogram of the outlier participantId.\n\n\nShow the code\n# Calculate count data\ncount_data <- joined_data %>%\n  count(participantId, name = \"count\")\n\n# Calculate quartiles and IQR from count_data\nq1 <- quantile(count_data$count, 0.25)\nq3 <- quantile(count_data$count, 0.75)\niqr <- q3 - q1\n\n# Define outlier cutoff values\nlower_cutoff <- q1 - 1.5 * iqr\nupper_cutoff <- q3 + 1.5 * iqr\n\n# Filter out outliers from joined_data\nfiltered_data <- joined_data %>%\n  inner_join(count_data, by = \"participantId\") %>%\n  filter(count >= lower_cutoff & count <= upper_cutoff)\n\n# Filter out outliers from participants\nfiltered_participants <- participants %>%\n  inner_join(count_data, by = \"participantId\") %>%\n  filter(count >= lower_cutoff & count <= upper_cutoff)\n\n# Filter out outliers from financial\nfiltered_financial <- financial %>%\n  inner_join(count_data, by = \"participantId\") %>%\n  filter(count >= lower_cutoff & count <= upper_cutoff)\n\n# histogram plot of participantId sorted by count\n# added lines for upper and lower Cutoff\nggplot(count_data, aes(x = reorder(participantId, count), y = count)) +\n  geom_bar(stat = \"identity\", width = 0.4) +\n  geom_hline(yintercept = lower_cutoff, linetype = \"dotted\", color = \"red\")+\n  geom_hline(yintercept = upper_cutoff, linetype = \"dotted\", color = \"red\")+\n  annotate(\"text\", x = Inf, y = lower_cutoff, label = paste(\"Lower Cutoff:\", lower_cutoff),\n           vjust = -1, hjust = 1, color = \"red\") +\n  annotate(\"text\", x = Inf, y = upper_cutoff, label = paste(\"Upper Cutoff:\", upper_cutoff),\n           vjust = 1, hjust = 1, color = \"red\") +\n  xlab(\"Participant ID\") +\n  ylab(\"Count\") +\n  ggtitle(\"Sorted Histogram on Count of records by Participant IDs \")\n\n\n\n\n\n\n\nTransform using pviot_wider\ntransform financial data using pviot_wider by “category” Replace NA wil ‘0’ and added year, month, weekdays and date fields.\n\n\nShow the code\ntransformed_financial<- filtered_financial %>% \n  pivot_wider(names_from = \"category\", \n              values_from = \"amount\",\n              values_fn = list(amount = sum))\n\ntransformed_financial$count <- NULL\ntransformed_financial$Wage <- replace(transformed_financial$Wage, is.na(transformed_financial$Wage), 0)\ntransformed_financial$Shelter <- replace(transformed_financial$Shelter, is.na(transformed_financial$Shelter), 0)\ntransformed_financial$Education <- replace(transformed_financial$Education, is.na(transformed_financial$Education), 0)\ntransformed_financial$RentAdjustment <- replace(transformed_financial$RentAdjustment, is.na(transformed_financial$RentAdjustment), 0)\ntransformed_financial$Food <- replace(transformed_financial$Food, is.na(transformed_financial$Food), 0)\ntransformed_financial$Recreation <- replace(transformed_financial$Recreation, is.na(transformed_financial$Recreation), 0)\n\n#transformed_financial <- transformed_financial %>% \n#  mutate(\n#    year = year(timestamp),\n#    month = month(timestamp),\n#    weekdays = weekdays(timestamp),\n#    date = date(timestamp)\n#  )\n\nhead(transformed_financial, 5) %>%\n  kbl(caption = \"Sample table after transformed\") %>%\n  kable_classic_2(full_width = F)\n\n\n\n\nSample table after transformed\n \n  \n    participantId \n    timestamp \n    year \n    month \n    weekdays \n    day \n    Wage \n    Shelter \n    Education \n    RentAdjustment \n    Food \n    Recreation \n  \n \n\n  \n    0 \n    2022-03-01 \n    2022 \n    3 \n    Tuesday \n    1 \n    2472.508 \n    554.9886 \n    38.00538 \n    0 \n    0 \n    0 \n  \n  \n    1 \n    2022-03-01 \n    2022 \n    3 \n    Tuesday \n    1 \n    2046.562 \n    554.9886 \n    38.00538 \n    0 \n    0 \n    0 \n  \n  \n    2 \n    2022-03-01 \n    2022 \n    3 \n    Tuesday \n    1 \n    2436.915 \n    556.5529 \n    12.81245 \n    0 \n    0 \n    0 \n  \n  \n    3 \n    2022-03-01 \n    2022 \n    3 \n    Tuesday \n    1 \n    2366.630 \n    554.9886 \n    38.00538 \n    0 \n    0 \n    0 \n  \n  \n    4 \n    2022-03-01 \n    2022 \n    3 \n    Tuesday \n    1 \n    2456.687 \n    1556.3562 \n    12.81245 \n    0 \n    0 \n    0"
  },
  {
    "objectID": "Take-home-Exercise_1.html#visulization-on-the-dataset",
    "href": "Take-home-Exercise_1.html#visulization-on-the-dataset",
    "title": "Take Home Exercise 1",
    "section": "Visulization on the dataset",
    "text": "Visulization on the dataset\n\nDistribution of participants data\n\nhouseholdSizehaveKidseducationLevelinterestGroup\n\n\n\n\nShow the code\nggplot(data = filtered_participants) +\n  geom_bar(mapping = aes(x = householdSize),color=\"grey25\", fill=\"grey90\")+\n  theme_gray() +\n  ggtitle(\"Distribution of householdSize\")+\n  theme_economist()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = filtered_participants) +\n  geom_bar(mapping = aes(x = haveKids),color=\"grey25\", fill=\"grey90\")+\n  theme_gray() +\n  ggtitle(\"Distribution of haveKids\")+\n  theme_economist()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = filtered_participants) +\n  geom_bar(mapping = aes(x = educationLevel),color=\"grey25\", fill=\"grey90\")+\n  theme_gray() +\n  ggtitle(\"Distribution of educationLevel\")+\n  theme_economist()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = filtered_participants) +\n  geom_bar(mapping = aes(x = interestGroup),color=\"grey25\", fill=\"grey90\")+\n  theme_gray() +\n  ggtitle(\"Distribution of interestGroup\")+\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\nDistribution of financial data\nOverview distribution of a continuous variable across multiple categories.\n\n\nShow the code\nggplot(filtered_financial, aes(x = amount,color = category, y = category)) + \n  ggridges::geom_density_ridges() +\n  scale_x_log10(labels = scales::dollar)\n\n\n\n\n\nInteractive distribution summary in ggplotly.\n\n\nShow the code\n# Create the ggplot object\np <- ggplot(filtered_financial, aes(x = amount, color = category, fill = category)) +\n  geom_density(alpha = .15) +\n  scale_x_log10(labels = scales::dollar)\n\n# Convert ggplot to plotly\np <- ggplotly(p)\n\n# Display the interactive plot\np\n\n\n\n\n\n\n\n\nWage and Spending across 12 month\nMonthly wage and spending consistent across all 12 month except RentAdjustment.\n\n\nShow the code\nggplot(data = filtered_financial, aes(x = month, y = category, fill = after_stat(x))) +\n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  theme_minimal() +\n  theme(legend.position=\"none\",\n  axis.text = element_text(size = 8)) +\n  scale_fill_viridis() +\n  transition_time(filtered_financial$month) +\n  ease_aes('linear')\n\n\n\n\n\nSpending for Recreation is usually higher on weekends. Spending for Shelter is usually on 1st or 2nd of each month.\n\n\nShow the code\np1 <- ggplot(transformed_financial, aes(x = weekdays, y = Recreation)) +\n  geom_bar(stat = \"identity\", width = 0.5) +\n  xlab(\"Weekdays\") +\n  ylab(\"Total Spending on Recreation\") +\n  ggtitle(\"Spending on Recreation by Weekday \")+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\np2 <- ggplot(transformed_financial, aes(x = day, y = Shelter)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  xlab(\"Day\") +\n  ylab(\"Total Spending on Shelter\") +\n  ggtitle(\"Spending on Shelter by Day \")\n\np1+p2\n\n\n\n\n\n\n\nInterestGroup vs categorical variables\n\neducationLevelhaveKidshouseholdSize\n\n\nHighSchoolOrCOllege are majority in all interest group.\n\n\nShow the code\nfiltered_participants %>% \n  count(interestGroup,educationLevel) %>%  \n  ggplot(mapping = aes(x = interestGroup, y = educationLevel)) +\n    geom_tile(mapping = aes(fill = n))\n\n\n\n\n\n\n\nMost don’t have kids.\n\n\nShow the code\nfiltered_participants %>% \n  count(interestGroup, haveKids) %>%  \n  ggplot(mapping = aes(x = interestGroup , y = haveKids )) +\n    geom_tile(mapping = aes(fill = n))\n\n\n\n\n\n\n\nAnd group D mostly have 3 people in their household\n\n\nShow the code\nfiltered_participants %>% \n  count(interestGroup, householdSize) %>%  \n  ggplot(mapping = aes(x = interestGroup , y = householdSize )) +\n    geom_tile(mapping = aes(fill = n))\n\n\n\n\n\n\n\n\n\n\nReference:\nRef Ref"
  }
]